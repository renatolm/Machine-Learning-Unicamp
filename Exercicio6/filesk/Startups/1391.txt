

The current messaging hype is overstated. There are certainly some interesting and unique opportunities for messaging as an interface, but I contend the number of practical use cases is a fraction of what the current hype cycle suggests. Facebook and Microsoft in particular have been pushing messaging because their proprietary messaging platforms give them a way to gain some leverage and autonomy on top of iOS and Android — but this reasoning is supply-driven, not demand-driven.
One of the key premises of messaging as a UI is that users may not have or don’t want to install an app to interact with a given service. By abstracting the UI to a messaging interface, the tech giants are trying to solve the “go to the App Store and download the app and create a username” problem. This should, in theory, increase long-term user engagement.Gartner Hype Cycle
Although messaging can help in these scenarios, there’s no reason this problem can’t be solved in the current app model on iOS and Android. Case in point: Google just showcased Android Instant Apps: partial, on-demand app downloads with integrated identity services. They have blurred the lines between HTML and native apps to offer the best of both worlds.
Apple is likely working on a similar solution for iOS. That function, coupled with persistent OS-level logins for Facebook/Google/Twitter/LinkedIn/iCloud/Apple Pay can easily solve the “go to the App Store and download the app and create a username” problem.
I’m therefore not convinced that a messaging interface should exist to circumvent the “go to the App Store and download the app and create a username” problem. Although messaging can help with this challenge today, this problem will be addressed at the OS level. Apple and Google are not oblivious to this.
So the question is, when does messaging as a UI make sense? I’ve developed a couple of litmus tests to answer this question:
Does the user actually want to talk to someone to complete the transaction?
Could a reasonable user want to engage in more than 10 different types of transactions?
In Facebook’s first messaging bot demos, they showcased ordering flowers and pizza via a messaging interface. Both are simple, straightforward transactions with a few customization options.
You don’t need to talk to a sales rep to purchase flowers or pizza. Perhaps if you’re in a store, you may want to speak to a florist because she’s there and you want her opinion. But if you’re buying flowers online, all you need to do is select an occasion, look at some pictures, then select a type, number of flowers, a vase and write a personal message. The number of options to choose from are limited, and the options themselves are easy to understand. That interface should be delivered in a graphical way, and not as a messaging conversation.
Or put more simply: Would you rather buy flowers over the phone, or via an app? The app is clearly the superior choice.
The same can be said of purchasing pizza: a linear transaction flow and a few customizations.
Neither of these transactions warrants human conversation in the real world. Why should users try to engage in these transactions as if they were talking to a human?
However, there are really interesting messaging use cases where I, as a user, want to “talk” with someone.
I have money with a private wealth manager at Morgan Stanley. I like talking to him because I can get his feedback on what’s going on in the markets, and discuss the rationale behind asset class allocation decisions. I also have money with Wealthfront. Using Wealthfront, my entire asset allocation decision effectively boils down to a few multiple choice questions that can be approximately simplified to: “How much risk do you want to take?” The computer decides the rest. Although I can look at the transaction details and determine which trades the computer is making, it’s hard to get a summary sense for the reasons behind decisions, and future outlook. A conversational UI would be awesome in this context:
“Hey Wealthfront, I’m concerned about the recent market volatility in the wake of Brexit. What’s going on in my portfolio?”
“Great question Kyle. In light of recent volatility, we’re doing X and Y and Z, and our outlook is A and B and C. I’ll give you another update in 2 or 4 weeks. What frequency would you like to be updated?”
Or …
“How are falling oil prices impacting my portfolio?”
“Well you don’t have any direct exposure to the energy industry. But you do have lots of exposure to the airline industry. Low oil prices reduce fuel costs, boosting airline profits.”
Right now, all I get is a single line graph showing the aggregate value of my portfolio. Any further analysis is virtually non-existent. I’m sure Wealthfront is trying to address this fundamental problem programmatically, but the UI complexity to pull this off is likely impossible. There are simply too many questions an investor could ask given the massive number of investing options. A messaging-driven UI makes a lot of sense here, given the vast breadth and depth of questions that a user may have.
(BTW, whether the messaging interface is delivered in a generic messaging app or in the Wealthfront app is immaterial for this use case.)
Or take Well. They are a messaging interface between patients and the front desk of a doctor’s office. Well automates appointment reminders, sends patients forms to complete before visits, helps patients reschedule appointments, manages insurance information, gets prescription refills, requests copies of medical records, manages bills/payments, etc. There are 1-2 dozen types of transactions a patient may have with the front desk of a physician’s practice. A graphical UI for navigating 12 different types of transactions will become unwieldy quickly. A messaging UI addresses this by letting the user simply drive the conversation naturally.
ATMs probably represent the limits of graphical UIs. ATMs today give users 3-6 options: check balance, deposit check, deposit cash, withdraw cash, cancel, etc. But as the number of transaction types balloons past ~10, UIs become unwieldy. Messaging can address option-overload.
As we increasingly use our phones to interact with the world around us, messaging as a UI will prosper. But today, messaging is overhyped. Companies are trying to offer messaging UIs where one isn’t really necessary. Many are too focused on circumventing the “go to the App Store and download the app and create a username” problem, as it’s no doubt a huge source of drop-off in the customer acquisition funnel.
But Apple and Google will solve this problem at the OS level. Messaging should not exist simply to circumvent a temporary shortcoming in mobile OSes circa 2016. Messaging apps should instead focus on areas where users want to feel like they’re actually talking to a person. This is a much harder technical problem, but, once solved, it will unlock enormous value.
Full disclosure: I advise Well, which is mentioned in this post.
