Almost a year ago, Red Hat announced its plans to launch a Docker-centric version of its Enterprise Linux distribution and after a long beta, Red Hat Enterprise Linux 7 Atomic Host is now generally available. With Atomic Host, Red Hat is throwing its hat into the Docker ring and joining the likes of CoreOS in the enterprise container OS space.
Project Atomic, which forms the basis of this distribution, is a Red Hat-sponsored project for developing a relatively lean operating system that’s designed to run Docker containers. In this respect, it’s a bit like Canonical’s various Snappy editions Ubuntu Core, which also focus on giving users a basic but secure base operating system for their container deployments.
The technologies at the core of Project Atomic are Docker, as well as Google’s Kubernetes container orchestration tools, rpm-ostree for managing updates (and rollbacks), and the systemd Linux system and services manager.
Red Hat, just like other OS vendors, agrees that the traditional monolithic technology stack is quickly giving way to microservices — and containers are ideally suited for this kind of work. The company stresses that Atomic Host includes all the security features of Red Hat Enterprise Linux and notes that it will inherit the ecosystem of certified partners that currently support its Enterprise Linux distribution. This partner ecosystem, the company argues, means it’ll be easy to move containers between different clouds and hypervisors, including VMware, Microsoft Hyper-V, Amazon Web Services and Google’s Cloud Platform.
One of the areas Red Hat especially focused on with Atomic Host is security and lifecycle management. Atomic Host will feature automatic, image-based updates. These can be deployed in a single step and — if something goes wrong — it’s easy to roll back the update, too.
Atomic Host allows developers to easily package their Red Hat Enterprise Linux 6 and 7 applications and deploy them in containers. This should make it relatively easy for existing Red Hat users to give Atomic Host a try.
